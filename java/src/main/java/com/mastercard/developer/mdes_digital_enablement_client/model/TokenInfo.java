/*
 * MDES Digital Enablement API
 * These APIs are designed as RPC style stateless web services where each API endpoint represents an operation to be performed.  All request and response payloads are sent in the JSON (JavaScript Object Notation) data-interchange format. Each endpoint in the API specifies the HTTP Method used to access it. All strings in request and response objects are to be UTF-8 encoded.  Each API URI includes the major and minor version of API that it conforms to.  This will allow multiple concurrent versions of the API to be deployed simultaneously. <br><br> **Authentication** <br><br> Mastercard uses OAuth 1.0a with body hash extension for authenticating the API clients. This requires every request that you send to  Mastercard to be signed with an RSA private key. A private-public RSA key pair must be generated consisting of: <br><br> 1. A private key for the OAuth signature for API requests. It is recommended to keep the private key in a password-protected or hardware keystore. <br> 2. A public key is shared with Mastercard during the project setup process through either a certificate signing request (CSR) or the API Key Generator. Mastercard will use the public key to verify the OAuth signature that is provided on every API call.<br>  An OAUTH1.0a signer library is available on [GitHub](https://github.com/Mastercard/oauth1-signer-java) <br><br> **Encryption** <br><br> All communications between Issuer web service and the Mastercard gateway is encrypted using TLS. <br><br> **Additional Encryption of Sensitive Data** <br><br> In addition to the OAuth authentication, when using MDES Digital Enablement Service, any PCI sensitive and all account holder Personally Identifiable Information (PII) data must be encrypted. This requirement applies to the API fields containing encryptedData. Sensitive data is encrypted using a symmetric session (one-time-use) key. The symmetric session key is then wrapped with an RSA Public Key supplied by Mastercard during API setup phase (the Customer Encryption Key). <br>  Java Client Encryption Library available on [GitHub](https://github.com/Mastercard/client-encryption-java) 
 *
 * The version of the OpenAPI document: 1.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.developer.mdes_digital_enablement_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TokenInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-08-03T18:13:45.340+01:00[Europe/London]")
public class TokenInfo {
  public static final String SERIALIZED_NAME_TOKEN_PAN_SUFFIX = "tokenPanSuffix";
  @SerializedName(SERIALIZED_NAME_TOKEN_PAN_SUFFIX)
  private String tokenPanSuffix;

  public static final String SERIALIZED_NAME_ACCOUNT_PAN_SUFFIX = "accountPanSuffix";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_PAN_SUFFIX)
  private String accountPanSuffix;

  public static final String SERIALIZED_NAME_TOKEN_EXPIRY = "tokenExpiry";
  @SerializedName(SERIALIZED_NAME_TOKEN_EXPIRY)
  private String tokenExpiry;

  public static final String SERIALIZED_NAME_ACCOUNT_PAN_EXPIRY = "accountPanExpiry";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_PAN_EXPIRY)
  private String accountPanExpiry;

  public static final String SERIALIZED_NAME_DSRP_CAPABLE = "dsrpCapable";
  @SerializedName(SERIALIZED_NAME_DSRP_CAPABLE)
  private String dsrpCapable;

  public static final String SERIALIZED_NAME_TOKEN_ASSURANCE_LEVEL = "tokenAssuranceLevel";
  @SerializedName(SERIALIZED_NAME_TOKEN_ASSURANCE_LEVEL)
  private Integer tokenAssuranceLevel;

  public static final String SERIALIZED_NAME_PRODUCT_CATEGORY = "productCategory";
  @SerializedName(SERIALIZED_NAME_PRODUCT_CATEGORY)
  private String productCategory;


  public TokenInfo tokenPanSuffix(String tokenPanSuffix) {
    
    this.tokenPanSuffix = tokenPanSuffix;
    return this;
  }

   /**
   * The last few digits (typically four) of the Token PAN. 
   * @return tokenPanSuffix
  **/
  @ApiModelProperty(example = "0001", required = true, value = "The last few digits (typically four) of the Token PAN. ")

  public String getTokenPanSuffix() {
    return tokenPanSuffix;
  }


  public void setTokenPanSuffix(String tokenPanSuffix) {
    this.tokenPanSuffix = tokenPanSuffix;
  }


  public TokenInfo accountPanSuffix(String accountPanSuffix) {
    
    this.accountPanSuffix = accountPanSuffix;
    return this;
  }

   /**
   * The last few digits (typically four) of the Account PAN. 
   * @return accountPanSuffix
  **/
  @ApiModelProperty(example = "0011", required = true, value = "The last few digits (typically four) of the Account PAN. ")

  public String getAccountPanSuffix() {
    return accountPanSuffix;
  }


  public void setAccountPanSuffix(String accountPanSuffix) {
    this.accountPanSuffix = accountPanSuffix;
  }


  public TokenInfo tokenExpiry(String tokenExpiry) {
    
    this.tokenExpiry = tokenExpiry;
    return this;
  }

   /**
   * The expiry of the Token PAN, given in MMYY format. 
   * @return tokenExpiry
  **/
  @ApiModelProperty(example = "921", required = true, value = "The expiry of the Token PAN, given in MMYY format. ")

  public String getTokenExpiry() {
    return tokenExpiry;
  }


  public void setTokenExpiry(String tokenExpiry) {
    this.tokenExpiry = tokenExpiry;
  }


  public TokenInfo accountPanExpiry(String accountPanExpiry) {
    
    this.accountPanExpiry = accountPanExpiry;
    return this;
  }

   /**
   * The expiry of the Account PAN, given in MMYY format. 
   * @return accountPanExpiry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "921", value = "The expiry of the Account PAN, given in MMYY format. ")

  public String getAccountPanExpiry() {
    return accountPanExpiry;
  }


  public void setAccountPanExpiry(String accountPanExpiry) {
    this.accountPanExpiry = accountPanExpiry;
  }


  public TokenInfo dsrpCapable(String dsrpCapable) {
    
    this.dsrpCapable = dsrpCapable;
    return this;
  }

   /**
   * Whether DSRP transactions are supported by this Token. Must be either &#39;true&#39; (DSRP capable) or &#39;false&#39; (Not DSRP capable). 
   * @return dsrpCapable
  **/
  @ApiModelProperty(example = "true", required = true, value = "Whether DSRP transactions are supported by this Token. Must be either 'true' (DSRP capable) or 'false' (Not DSRP capable). ")

  public String getDsrpCapable() {
    return dsrpCapable;
  }


  public void setDsrpCapable(String dsrpCapable) {
    this.dsrpCapable = dsrpCapable;
  }


  public TokenInfo tokenAssuranceLevel(Integer tokenAssuranceLevel) {
    
    this.tokenAssuranceLevel = tokenAssuranceLevel;
    return this;
  }

   /**
   * A value indicating the confidence level of the token to Account PAN binding. 
   * @return tokenAssuranceLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3", value = "A value indicating the confidence level of the token to Account PAN binding. ")

  public Integer getTokenAssuranceLevel() {
    return tokenAssuranceLevel;
  }


  public void setTokenAssuranceLevel(Integer tokenAssuranceLevel) {
    this.tokenAssuranceLevel = tokenAssuranceLevel;
  }


  public TokenInfo productCategory(String productCategory) {
    
    this.productCategory = productCategory;
    return this;
  }

   /**
   * The product category of the Account PAN. When supplied will be one of the following values:    * CREDIT   * DEBIT   * PREPAID   * UNKNOWN 
   * @return productCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CREDIT", value = "The product category of the Account PAN. When supplied will be one of the following values:    * CREDIT   * DEBIT   * PREPAID   * UNKNOWN ")

  public String getProductCategory() {
    return productCategory;
  }


  public void setProductCategory(String productCategory) {
    this.productCategory = productCategory;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TokenInfo tokenInfo = (TokenInfo) o;
    return Objects.equals(this.tokenPanSuffix, tokenInfo.tokenPanSuffix) &&
        Objects.equals(this.accountPanSuffix, tokenInfo.accountPanSuffix) &&
        Objects.equals(this.tokenExpiry, tokenInfo.tokenExpiry) &&
        Objects.equals(this.accountPanExpiry, tokenInfo.accountPanExpiry) &&
        Objects.equals(this.dsrpCapable, tokenInfo.dsrpCapable) &&
        Objects.equals(this.tokenAssuranceLevel, tokenInfo.tokenAssuranceLevel) &&
        Objects.equals(this.productCategory, tokenInfo.productCategory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tokenPanSuffix, accountPanSuffix, tokenExpiry, accountPanExpiry, dsrpCapable, tokenAssuranceLevel, productCategory);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TokenInfo {\n");
    sb.append("    tokenPanSuffix: ").append(toIndentedString(tokenPanSuffix)).append("\n");
    sb.append("    accountPanSuffix: ").append(toIndentedString(accountPanSuffix)).append("\n");
    sb.append("    tokenExpiry: ").append(toIndentedString(tokenExpiry)).append("\n");
    sb.append("    accountPanExpiry: ").append(toIndentedString(accountPanExpiry)).append("\n");
    sb.append("    dsrpCapable: ").append(toIndentedString(dsrpCapable)).append("\n");
    sb.append("    tokenAssuranceLevel: ").append(toIndentedString(tokenAssuranceLevel)).append("\n");
    sb.append("    productCategory: ").append(toIndentedString(productCategory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

